CREATE DATABASE School
USE School

CREATE TABLE Students(
	Id INT PRIMARY KEY IDENTITY,
	FirstName NVARCHAR(30) NOT NULL,
	MiddleName NVARCHAR(25),
	LastName NVARCHAR(30) NOT NULL,
	Age INT CHECK (Age >= 5 AND Age <=100),
	[Address] NVARCHAR(50),
	Phone NCHAR(10)
)

CREATE TABLE Subjects(
	Id INT PRIMARY KEY IDENTITY,
	[Name] NVARCHAR(20) NOT NULL,
	Lessons INT CHECK(Lessons > 0) NOT NULL
)

CREATE TABLE StudentsSubjects(
	Id INT PRIMARY KEY IDENTITY,
	StudentId INT FOREIGN KEY REFERENCES Students(Id) NOT NULL,
	SubjectId INT FOREIGN KEY REFERENCES Subjects(Id) NOT NULL,
	Grade DECIMAL(10,2) CHECK (Grade >=2 AND Grade <=6) NOT NULL
)

CREATE TABLE Exams(
	Id INT PRIMARY KEY IDENTITY,
	[Date] DATETIME2,
	SubjectId INT FOREIGN KEY REFERENCES Subjects(Id) NOT NULL
)

CREATE TABLE StudentsExams(
	StudentId INT FOREIGN KEY REFERENCES Students(Id) NOT NULL,
	ExamId INT FOREIGN KEY REFERENCES Exams(Id) NOT NULL,
	Grade DECIMAL(10,2) CHECK (Grade >=2 AND Grade <=6)
	PRIMARY KEY (StudentId, ExamId)
)

CREATE TABLE Teachers(
	Id INT PRIMARY KEY IDENTITY,
	FirstName NVARCHAR(20) NOT NULL,
	LastName NVARCHAR(20) NOT NULL,
	[Address] NVARCHAR(20) NOT NULL,
	Phone CHAR(10),
	SubjectId INT FOREIGN KEY REFERENCES Subjects(Id) NOT NULL
)

CREATE TABLE StudentsTeachers(
	StudentId INT FOREIGN KEY REFERENCES Students(Id) NOT NULL,
	TeacherId INT FOREIGN KEY REFERENCES Teachers(Id) NOT NULL
	PRIMARY KEY (StudentId, TeacherId)
)

INSERT INTO Teachers 
	VALUES ('Ruthanne','Bamb','84948 Mesta Junction',3105500146,6),
	       ('Gerrard','Lowin','370 Talisman Plaza',3324874824,2),
	       ('Merrile','Lambdin','81 Dahle Plaza',4373065154,5),
	       ('Bert','Ivie','2 Gateway Circle',4409584510,4)

INSERT INTO Subjects
	VALUES ('Geometry',12),
		   ('Health',10),
		   ('Drama',7),
		   ('Sports',9)

UPDATE StudentsSubjects
	SET Grade = 6.00
	WHERE SubjectId IN (1,2) AND Grade >=5.50

DELETE StudentsTeachers
	WHERE TeacherId IN (SELECT Id FROM Teachers WHERE Phone LIKE '%72%')
DELETE Teachers
	WHERE Phone LIKE '%72%'


SELECT FirstName, LastName, Age FROM Students
	WHERE Age >= 12
	ORDER BY FirstName, LastName

SELECT 
FirstName, 
LastName, 
COUNT(TeacherId) AS TeachersCount 
FROM StudentsTeachers AS st
	JOIN Students AS s ON st.StudentId = s.Id
	GROUP BY FirstName, LastName

SELECT CONCAT(FirstName, ' ', LastName) AS [Full Name] 
FROM StudentsExams AS se
RIGHT JOIN Students AS s ON se.StudentId = s.Id
WHERE se.StudentId IS NULL
ORDER BY [Full Name] 

SELECT TOP(10)
FirstName, 
LastName, 
FORMAT(AVG(Grade), 'F2') AS Grade 
FROM StudentsExams AS se
JOIN Students AS s ON se.StudentId = s.Id
GROUP BY FirstName, LastName
ORDER BY Grade DESC, FirstName, LastName

SELECT CONCAT(FirstName, ' ', MiddleName + ' ', LastName) AS [Full Name]
FROM StudentsSubjects AS ss
RIGHT JOIN Students AS s ON ss.StudentId = s.Id
WHERE ss.Id IS NULL
ORDER BY [Full Name]

SELECT Temp.Name, Temp.AverageGrade FROM (SELECT s.Name, AVG(ss.Grade) AS AverageGrade, s.Id 
FROM StudentsSubjects AS ss
JOIN Subjects AS s ON ss.SubjectId = s.Id
GROUP BY s.Name, s.Id) AS Temp
ORDER BY Temp.Id

CREATE FUNCTION udf_ExamGradesToUpdate(@studentId INT, @grade DECIMAL(3,2))
RETURNS NVARCHAR(100)
AS
BEGIN
	DECLARE @CheckStudentId INT = (SELECT Id FROM Students 
										WHERE Id = @studentId)
	IF(@CheckStudentId IS NULL)
	RETURN 'The student with provided id does not exist in the school!'

	IF(@grade > 6.00)
	RETURN 'Grade cannot be above 6.00!'

	DECLARE @CountOfGrades INT = (SELECT COUNT(*) FROM StudentsExams
									WHERE StudentId = @studentId AND Grade BETWEEN @grade AND @grade + 0.50)
	
	DECLARE @StudentName NVARCHAR(50) = (SELECT FirstName FROM Students 
											WHERE Id = @studentId)

	RETURN 'You have to update ' + CAST(@CountOfGrades AS NVARCHAR) + ' grades for the student ' + @StudentName 
END

CREATE PROCEDURE usp_ExcludeFromSchool(@StudentId INT)
AS
	DECLARE @CheckStudent INT = (SELECT Id FROM Students 
								WHERE Id = @StudentId)
	IF(@CheckStudent IS NULL)
	THROW 50000, 'This school has no student with the provided id!', 1

	DELETE FROM StudentsTeachers WHERE StudentId = @StudentId
	DELETE FROM StudentsSubjects WHERE StudentId = @StudentId
	DELETE FROM StudentsExams WHERE StudentId = @StudentId
	DELETE FROM Students WHERE Id = @StudentId
GO

EXEC usp_ExcludeFromSchool 1
SELECT COUNT(*) FROM Students

EXEC usp_ExcludeFromSchool 301
